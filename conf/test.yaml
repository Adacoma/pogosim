---

window_width: 600       # In pixels
window_height: 600      # In pixels

arena_file: arenas/disk.csv
#arena_file: arenas/arena8.csv
arena_surface: 1.0e6    # In mmÂ²

delete_old_files: true
enable_data_logging: true
data_filename: "frames/data.feather"
enable_console_logging: true
console_filename: "frames/console.txt"
save_data_period: 1.0       # In s
save_video_period: 1.0      # In s
frames_name: "frames/f{:010.4f}.png"

seed: 0
show_communication_channels: false
show_lateral_LEDs: true
show_light_levels: true
GUI: true

# Time
simulation_time: 500.0     # In s
time_step: 0.01            # In s
GUI_speed_up: 10.0

initial_formation: random # Can be "random" (all robots are placed randomly in the arena), or "disk" (robots are placed uniformly in a disk shape at the center of the arena)


# Objects. TODO WIP
objects:
    global_light:
        type: static_light
        geometry: global
        value: 0
        photo_start_at: 1.0
        photo_start_duration: 1.0
        photo_start_value: 32767

    target_light:
        type: static_light
        geometry: disk
        x: 500
        y: 500
        radius: 200
        value: 32767
#        photo_start_at: 1.0
#        photo_start_duration: 1.0
#        photo_start_value: 0

    obstacles:
        type: passive_object
        geometry: rectangle # disk
        nb: 3
        #initial_formation: random
        colormap: qualitative # rainbow # TODO

        radius: 70              # In mm, if geometry is a disk
        body_width: 70          # In mm, if geometry is a rectangle
        body_height: 50         # In mm, if geometry is a rectangle

        body_linear_damping: 0.0
        body_angular_damping: 0.0
        body_density: 10.1
        body_friction: 0.3
        body_restitution: 0.3
        #body_collision_shape: rectangle

#    walls:
#        type: pogowall
#        geometry: arena
#
#        p_send: 0.5
#        msg_success_rate:
#            type: static
#            rate: 0.9

    robots:
        type: pogobot
        nb: 60
        #initial_formation: disk
        geometry: disk                  # Pogobots are always disk-shaped
        radius: 26.5                    # In mm

        communication_radius: 80.0      # In mm, from each IR emitter
        body_linear_damping: 0.3
        body_angular_damping: 0.3
        body_density: 10.0
        body_friction: 0.3
        body_restitution: 0.5
        #body_collision_shape: circle
        #body_collision_radius: 0.00
        body_linear_noise_stddev: 0.5
        body_angular_noise_stddev: 2.0

        msg_success_rate:
            #type: static
            #rate: 0.9
            type: dynamic # Msg success rate follows this formula: "1 / (1 + (alpha * msg_size**beta * p_send**gamma * cluster_size**delta))"
            alpha: 0.000004
            beta: 2.8096
            gamma: 2.3807
            delta: 1.2457


    robots2:
        type: pogobot
        nb: 5
        #initial_formation: disk
        geometry: disk                  # Pogobots are always disk-shaped
        radius: 16.5                    # In mm

        communication_radius: 120.0     # In mm, from each IR emitter
        body_linear_damping: 0.3
        body_angular_damping: 0.3
        body_density: 10.0
        body_friction: 0.3
        body_restitution: 0.5
        #body_collision_shape: circle
        #body_collision_radius: 0.00
        body_linear_noise_stddev: 0.5
        body_angular_noise_stddev: 2.0

        msg_success_rate:
            type: static
            rate: 0.9

    robots3:
        type: pogobject
        nb: 2
        geometry: disk                  # Pogobots are always disk-shaped
        radius: 50.0                    # In mm

        communication_radius: 120.0     # In mm, from each IR emitter
        body_linear_damping: 0.3
        body_angular_damping: 0.3
        body_density: 1000.0
        body_friction: 0.3
        body_restitution: 0.5
        #body_collision_shape: circle
        #body_collision_radius: 0.00

        msg_success_rate:
            type: static
            rate: 0.9

########### Parameters used to directly initialize variables from the C code of the robots ###########
parameters:
    # Configuration parameters for the run_and_tumble example
    run_duration_min: 100
    run_duration_max: 2000
    tumble_duration_min: 100
    tumble_duration_max: 1100

# MODELINE "{{{1
# vim:expandtab:softtabstop=4:shiftwidth=4:fileencoding=utf-8
# vim:foldmethod=marker
